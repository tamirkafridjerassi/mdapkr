name: Deploy to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS OIDC credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055029294053:role/GitHubActionsECRPush
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: 055029294053.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: mdapkr-fastapi
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./fastapi-app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  unit-test:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install pytest

      - name: Run unit tests
        run: pytest tests/unit

  e2e-test:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Install Docker + Compose plugin
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install requests pytest

      - name: Start docker-compose test environment
        run: docker compose -f docker-compose.test.yml up -d

      - name: Wait for API to be healthy
        run: |
          for i in {1..10}; do
            curl -s http://localhost:8000/people && exit 0 || sleep 3
          done
          echo "API did not start in time" && exit 1

      - name: Run end-to-end tests
        run: pytest tests/e2e

      - name: Stop docker-compose test environment
        if: always()
        run: docker compose -f docker-compose.test.yml down

  deploy:
    runs-on: ubuntu-latest
    needs: [unit-test, e2e-test]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS OIDC credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055029294053:role/GitHubActionsECRPush
          aws-region: ap-south-1

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name mdapkr-cluster

      - name: Helm upgrade release
        env:
          IMAGE_TAG: ${{ github.sha }}
          ECR_REGISTRY: 055029294053.dkr.ecr.ap-south-1.amazonaws.com
        run: |
          helm dependency update ./helm/mdapkr/mdapkr
          helm upgrade --install mdapkr ./helm/mdapkr/mdapkr \
            --set fastapi.image.tag=$IMAGE_TAG \
            --set fastapi.image.repository=$ECR_REGISTRY/mdapkr-fastapi
